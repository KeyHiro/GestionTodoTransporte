-- MySQL Script generated by MySQL Workbench
-- 12/14/14 19:52:17
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema TTPT
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `TTPT` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `TTPT` ;

-- -----------------------------------------------------
-- Table `TTPT`.`TIPO_USUARIO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`TIPO_USUARIO` (
  `Tipo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Tipo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`TIPO_FUNCIONARIO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`TIPO_FUNCIONARIO` (
  `Nombre` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`Nombre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`FUNCIONARIO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`FUNCIONARIO` (
  `idFUNCIONARIO` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NOT NULL,
  `Tipo` VARCHAR(20) NOT NULL COMMENT 'crear trigger on insert' /* comment truncated */ /*DOC
ADM
OFF
*/,
  PRIMARY KEY (`idFUNCIONARIO`),
  INDEX `fk_FUNCIONARIO-TIPO_FUNCIONARIO_idx` (`Tipo` ASC),
  CONSTRAINT `fk__FUNCIONARIO__TIPO_FUNCIONARIO`
    FOREIGN KEY (`Tipo`)
    REFERENCES `TTPT`.`TIPO_FUNCIONARIO` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`USUARIO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`USUARIO` (
  `Nombre` VARCHAR(45) NOT NULL,
  `Contraseña` VARCHAR(45) NOT NULL,
  `Tipo` VARCHAR(45) NOT NULL COMMENT 'Se usa para identificar los privilegios:' /* comment truncated */ /*ADMIN->administrador, acceso completo.
NORM->acceso limitado*/,
  `Funcionario` INT NULL COMMENT 'Asociacion a un funcionario de la nomina.' /* comment truncated */ /*Puede que despues no sea nulleable
*/,
  PRIMARY KEY (`Nombre`),
  INDEX `fk_USUARIO-TIPO_idx` (`Tipo` ASC),
  INDEX `fk_USUARIO_FUNCIONARIO1_idx` (`Funcionario` ASC),
  CONSTRAINT `fk__USUARIO__TIPO`
    FOREIGN KEY (`Tipo`)
    REFERENCES `TTPT`.`TIPO_USUARIO` (`Tipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__USUARIO__FUNCIONARIO`
    FOREIGN KEY (`Funcionario`)
    REFERENCES `TTPT`.`FUNCIONARIO` (`idFUNCIONARIO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`AREA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`AREA` (
  `Nombre` VARCHAR(45) NOT NULL COMMENT 'Representa el nombre completo de la familia de ingresos (servicio) que representa, por ejemplo licencia tipo B, A-1, etc...',
  `Alias` VARCHAR(45) NULL COMMENT 'Representa al código que se usa para identificar producto que pertenece al área.',
  PRIMARY KEY (`Nombre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`PRODUCTO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`PRODUCTO` (
  `Nombre` VARCHAR(40) NOT NULL,
  `Area` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Nombre`),
  INDEX `fk_CURSO_AREA1_idx` (`Area` ASC),
  CONSTRAINT `fk__PRODUCTO__AREA`
    FOREIGN KEY (`Area`)
    REFERENCES `TTPT`.`AREA` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`CLIENTE_POTENCIAL`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`CLIENTE_POTENCIAL` (
  `idCLIENTE_POTENCIAL` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(255) NOT NULL,
  `Telefono` DECIMAL(10,0) NULL,
  `Producto` VARCHAR(10) NOT NULL COMMENT 'Representa el producto por el cual el cliente muestra interés.',
  `Extra` TEXT NULL COMMENT 'Algún comentario o informacion adicional que se quisiese guardar.',
  PRIMARY KEY (`idCLIENTE_POTENCIAL`),
  INDEX `fk_CLIENTE-CURSO_idx` (`Producto` ASC),
  CONSTRAINT `fk__CLIENTE__CURSO`
    FOREIGN KEY (`Producto`)
    REFERENCES `TTPT`.`PRODUCTO` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`ATENCION_CLIENTE_POTENCIAL`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`ATENCION_CLIENTE_POTENCIAL` (
  `idATENCION_CLIENTE_POTENCIAL` INT NOT NULL AUTO_INCREMENT,
  `Usuario` VARCHAR(45) NOT NULL,
  `Cliente_Potencial` INT NOT NULL,
  `Fecha` DATETIME NOT NULL,
  `Tipo` VARCHAR(3) NOT NULL COMMENT 'Se refiere a si la atención fue en' /* comment truncated */ /*
OFF: oficina
TEL: por telefono 
u otro que se pueda agregar.*/,
  PRIMARY KEY (`idATENCION_CLIENTE_POTENCIAL`),
  INDEX `fk_ATENCION-USUARIO_idx` (`Usuario` ASC),
  INDEX `fk_ATENCION-CLIENTE_idx` (`Cliente_Potencial` ASC),
  CONSTRAINT `fk__ATENCION__USUARIO`
    FOREIGN KEY (`Usuario`)
    REFERENCES `TTPT`.`USUARIO` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__ATENCION__CLIENTE`
    FOREIGN KEY (`Cliente_Potencial`)
    REFERENCES `TTPT`.`CLIENTE_POTENCIAL` (`idCLIENTE_POTENCIAL`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`CURSO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`CURSO` (
  `Codigo` VARCHAR(10) NOT NULL,
  `Producto` VARCHAR(40) NOT NULL,
  `FechaInicio` DATE NOT NULL,
  `FechaTermino` DATE NOT NULL,
  `Cupos` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`Codigo`, `Producto`),
  INDEX `fk_CLASE-CURSO_idx` (`Producto` ASC),
  CONSTRAINT `fk_CURSO-PRODUCTO`
    FOREIGN KEY (`Producto`)
    REFERENCES `TTPT`.`PRODUCTO` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`TIPO_DOCUMENTO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`TIPO_DOCUMENTO` (
  `Nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Nombre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`DOCUMENTO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`DOCUMENTO` (
  `idDOCUMENTO` INT NOT NULL AUTO_INCREMENT,
  `Tipo` VARCHAR(45) NOT NULL,
  `Funcionario` INT NOT NULL COMMENT 'Quien recibe o \"elabora\" el documento.',
  `Fecha` DATE NULL,
  `Estado` VARCHAR(45) NULL COMMENT 'Al día o pendiente',
  PRIMARY KEY (`idDOCUMENTO`),
  UNIQUE INDEX `Tipo_UNIQUE` (`Tipo` ASC),
  INDEX `fk__DOCUMENTO__FUNCIONARIO_idx` (`Funcionario` ASC),
  CONSTRAINT `fk__DOCUMENTO__TIPO_DOCUMENTO`
    FOREIGN KEY (`Tipo`)
    REFERENCES `TTPT`.`TIPO_DOCUMENTO` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__DOCUMENTO__FUNCIONARIO`
    FOREIGN KEY (`Funcionario`)
    REFERENCES `TTPT`.`FUNCIONARIO` (`idFUNCIONARIO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`TIPO_CLIENTE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`TIPO_CLIENTE` (
  `Nombre` VARCHAR(10) NOT NULL COMMENT 'Se refiere al tipo de ',
  PRIMARY KEY (`Nombre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`CLIENTE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`CLIENTE` (
  `idCLIENTE` INT NOT NULL,
  `Nombre` VARCHAR(255) NOT NULL,
  `RUT` VARCHAR(11) NOT NULL,
  `Fecha_Nac` DATE NOT NULL,
  `Telefono` DECIMAL(10,0) NOT NULL,
  `e-Mail` VARCHAR(255) NULL,
  `TipoCliente` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`idCLIENTE`),
  INDEX `fk__CLIENTE__TIPO_CLIENTE_idx` (`TipoCliente` ASC),
  CONSTRAINT `fk__CLIENTE__TIPO_CLIENTE`
    FOREIGN KEY (`TipoCliente`)
    REFERENCES `TTPT`.`TIPO_CLIENTE` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`COMPRA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`COMPRA` (
  `idCOMPRA` INT NOT NULL AUTO_INCREMENT,
  `Cliente` INT NOT NULL,
  `Producto` VARCHAR(40) NOT NULL,
  `Fecha` DATE NOT NULL COMMENT 'Fecha en que se realiza la compra',
  PRIMARY KEY (`idCOMPRA`),
  INDEX `fk_COMPRA-CLIENTE_idx` (`Cliente` ASC),
  INDEX `fk_COMPRA-PRODUCTO_idx` (`Producto` ASC),
  CONSTRAINT `fk_COMPRA-CLIENTE`
    FOREIGN KEY (`Cliente`)
    REFERENCES `TTPT`.`CLIENTE` (`idCLIENTE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_COMPRA-PRODUCTO`
    FOREIGN KEY (`Producto`)
    REFERENCES `TTPT`.`PRODUCTO` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`MATRICULA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`MATRICULA` (
  `Documento` INT NOT NULL,
  `Curso` VARCHAR(10) NOT NULL,
  `Codigo` VARCHAR(6) NOT NULL COMMENT 'Codigo propio de la matrícula',
  `Fecha` VARCHAR(45) NOT NULL COMMENT 'La fecha del día en que se registra.',
  `HoraTeoria` TIME NOT NULL,
  `HoraPractica` TIME NOT NULL,
  `CodigoCompra` INT NOT NULL,
  `FirmaGerencia` TINYINT(1) NOT NULL,
  `FirmaCliente` TINYINT(1) NOT NULL,
  `L_V` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'se refiere a si las clases son de lunes a viernes (true), o de lunes a sabado (false).',
  PRIMARY KEY (`Documento`),
  INDEX `fk_MATRICULA-CURSO_idx` (`Curso` ASC),
  UNIQUE INDEX `Codigo_UNIQUE` (`Codigo` ASC),
  INDEX `fk_MATRICULA__COMPRA_idx` (`CodigoCompra` ASC),
  CONSTRAINT `fk__MATRICULA__CURSO`
    FOREIGN KEY (`Curso`)
    REFERENCES `TTPT`.`CURSO` (`Codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__MATRICULA__DOCUMENTO`
    FOREIGN KEY (`Documento`)
    REFERENCES `TTPT`.`DOCUMENTO` (`idDOCUMENTO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_MATRICULA__COMPRA`
    FOREIGN KEY (`CodigoCompra`)
    REFERENCES `TTPT`.`COMPRA` (`idCOMPRA`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`EXAMEN_VISUAL`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`EXAMEN_VISUAL` (
  `Documento` INT NOT NULL,
  `Certificado` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`Documento`),
  CONSTRAINT `fk__EXAMEN_VISUAL__DOCUMENTO`
    FOREIGN KEY (`Documento`)
    REFERENCES `TTPT`.`DOCUMENTO` (`idDOCUMENTO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`ESTUDIANTE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`ESTUDIANTE` (
  `idESTUDIANTE` VARCHAR(6) NOT NULL,
  `FotosCarnet` INT NOT NULL DEFAULT 0 COMMENT 'Indica la cantidad de Fotos tamaño carnet que ha entregado el estudiante',
  `CertEstudios` TINYINT(1) NOT NULL DEFAULT 0,
  `CertNotarial` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`idESTUDIANTE`),
  CONSTRAINT `fk__ESTUDIANTE__MATRICULA`
    FOREIGN KEY (`idESTUDIANTE`)
    REFERENCES `TTPT`.`MATRICULA` (`Codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`MEDIO_PAGO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`MEDIO_PAGO` (
  `Nombre` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`Nombre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`PAGO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`PAGO` (
  `Codigo` VARCHAR(6) NOT NULL,
  `Monto` DECIMAL(10,0) NULL DEFAULT 0 COMMENT 'Por el momento no vemos montos',
  `Medio_Pago` VARCHAR(25) NOT NULL,
  `Compra` INT NOT NULL COMMENT 'Compra a la que corresponde',
  `Fecha` DATE NOT NULL COMMENT 'Fecha en que es realizado el pago (ideal = a la compra)',
  `Descuento` INT NOT NULL DEFAULT 0 COMMENT 'va de 0 a 100',
  PRIMARY KEY (`Codigo`),
  INDEX `fk_PAGO_MEDIO_PAGO1_idx` (`Medio_Pago` ASC),
  INDEX `fk_PAGO-COMPRA_idx` (`Compra` ASC),
  CONSTRAINT `fk_PAGO_MEDIO_PAGO1`
    FOREIGN KEY (`Medio_Pago`)
    REFERENCES `TTPT`.`MEDIO_PAGO` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PAGO-COMPRA`
    FOREIGN KEY (`Compra`)
    REFERENCES `TTPT`.`COMPRA` (`Cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`DOCENTE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`DOCENTE` (
  `idDOCENTE` INT NOT NULL AUTO_INCREMENT,
  `Telefono` VARCHAR(45) NOT NULL,
  `Tipo` VARCHAR(3) NOT NULL COMMENT 'PRO' /* comment truncated */ /*INS
hacer trigguer on insert*/,
  PRIMARY KEY (`idDOCENTE`),
  CONSTRAINT `fk_DOCENTE_FUNCIONARIO`
    FOREIGN KEY (`idDOCENTE`)
    REFERENCES `TTPT`.`FUNCIONARIO` (`idFUNCIONARIO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`PROFESOR`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`PROFESOR` (
  `idPROFESOR` INT NOT NULL,
  PRIMARY KEY (`idPROFESOR`),
  CONSTRAINT `fk_PROFESOR-DOCENTE`
    FOREIGN KEY (`idPROFESOR`)
    REFERENCES `TTPT`.`DOCENTE` (`idDOCENTE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`CLASE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`CLASE` (
  `idCLASE` INT NOT NULL AUTO_INCREMENT,
  `Curso` VARCHAR(10) NOT NULL,
  `Horario` TIME NOT NULL,
  `DIA` INT NOT NULL COMMENT '1:Lunes' /* comment truncated */ /*2:Martes
3:Miercoles
4:Jueves
5:Viernes
6:Sábado
7:Domingo
*/,
  PRIMARY KEY (`idCLASE`),
  INDEX `fk__CLASE__CURSO_idx` (`Curso` ASC),
  CONSTRAINT `fk__CLASE__CURSO`
    FOREIGN KEY (`Curso`)
    REFERENCES `TTPT`.`CURSO` (`Codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`TEORIA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`TEORIA` (
  `Clase` INT NOT NULL,
  `Profesor` INT NOT NULL COMMENT 'Encargado',
  INDEX `fk_TEORIA-PROFESOR_idx` (`Profesor` ASC),
  INDEX `fk_TEORIA-CLASE_idx` (`Clase` ASC),
  PRIMARY KEY (`Clase`),
  CONSTRAINT `fk_TEORIA-PROFESOR`
    FOREIGN KEY (`Profesor`)
    REFERENCES `TTPT`.`PROFESOR` (`idPROFESOR`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TEORIA-CLASE`
    FOREIGN KEY (`Clase`)
    REFERENCES `TTPT`.`CLASE` (`idCLASE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`ESTADO_AUTO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`ESTADO_AUTO` (
  `Estado` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Estado`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`AUTO-ESCUELA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`AUTO-ESCUELA` (
  `Matricula` VARCHAR(6) NOT NULL,
  `Modelo` VARCHAR(45) NULL,
  `Estado` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Matricula`),
  INDEX `fk_AUTO-ESCUELA-ESTADO_AUTO_idx` (`Estado` ASC),
  CONSTRAINT `fk_AUTO-ESCUELA-ESTADO_AUTO`
    FOREIGN KEY (`Estado`)
    REFERENCES `TTPT`.`ESTADO_AUTO` (`Estado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`INSTRUCTOR`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`INSTRUCTOR` (
  `idINSTRUCTOR` INT NOT NULL,
  `Auto` VARCHAR(6) NOT NULL COMMENT 'Delegado o responsable',
  PRIMARY KEY (`idINSTRUCTOR`),
  INDEX `fk_INSTRUCTOR-AUTO-ESCUELA_idx` (`Auto` ASC),
  CONSTRAINT `fk_INSTRUCTOR-DOCENTE`
    FOREIGN KEY (`idINSTRUCTOR`)
    REFERENCES `TTPT`.`DOCENTE` (`idDOCENTE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_INSTRUCTOR-AUTO-ESCUELA`
    FOREIGN KEY (`Auto`)
    REFERENCES `TTPT`.`AUTO-ESCUELA` (`Matricula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`PRACTICA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`PRACTICA` (
  `Clase` INT NOT NULL,
  `Instructor` INT NOT NULL COMMENT 'Encargado',
  INDEX `fk_PRACTICA-INSTRUCTOR_idx` (`Instructor` ASC),
  PRIMARY KEY (`Clase`),
  CONSTRAINT `fk_PRACTICA-CLASE`
    FOREIGN KEY (`Clase`)
    REFERENCES `TTPT`.`CLASE` (`idCLASE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PRACTICA-INSTRUCTOR`
    FOREIGN KEY (`Instructor`)
    REFERENCES `TTPT`.`INSTRUCTOR` (`idINSTRUCTOR`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`ASISTENCIA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`ASISTENCIA` (
  `idASISTENCIA` INT NOT NULL,
  `Estudiante` VARCHAR(6) NOT NULL,
  `Fecha` DATE NOT NULL,
  `Horario` TIME NOT NULL,
  PRIMARY KEY (`idASISTENCIA`),
  INDEX `fk_ASISTENCIA-ESTUDIANTE_idx` (`Estudiante` ASC),
  CONSTRAINT `fk_ASISTENCIA-ESTUDIANTE`
    FOREIGN KEY (`Estudiante`)
    REFERENCES `TTPT`.`ESTUDIANTE` (`idESTUDIANTE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`PSICOTECNICO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`PSICOTECNICO` (
  `Documento` INT NOT NULL,
  PRIMARY KEY (`Documento`),
  INDEX `fk_PSICOTECNICO_DOCUMENTO_idx` (`Documento` ASC),
  CONSTRAINT `fk__PSICOTECNICO__DOCUMENTO`
    FOREIGN KEY (`Documento`)
    REFERENCES `TTPT`.`DOCUMENTO` (`idDOCUMENTO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`CAMBIO_RUEDA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`CAMBIO_RUEDA` (
  `Documento` INT NOT NULL,
  `Horario` TIME NOT NULL,
  PRIMARY KEY (`Documento`),
  UNIQUE INDEX `Fecha_UNIQUE` (`Horario` ASC)  COMMENT 'No se pueden repetir ambos juntos, Fecha ni horario',
  INDEX `fk_CAMBIO_RUEDA-DOCUMENTO_idx` (`Documento` ASC),
  CONSTRAINT `fk_CAMBIO_RUEDA-DOCUMENTO`
    FOREIGN KEY (`Documento`)
    REFERENCES `TTPT`.`DOCUMENTO` (`idDOCUMENTO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`PRACTICA_ESTUDIANTE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`PRACTICA_ESTUDIANTE` (
  `Practica` INT NOT NULL,
  `Estudiante` VARCHAR(6) NOT NULL,
  PRIMARY KEY (`Practica`, `Estudiante`),
  INDEX `fk_PRACTICA_ESTUDIANTE_ESTUDIANTE_idx` (`Estudiante` ASC),
  CONSTRAINT `fk_PRACTICA_ESTUDIANTE-ESTUDIANTE`
    FOREIGN KEY (`Estudiante`)
    REFERENCES `TTPT`.`ESTUDIANTE` (`idESTUDIANTE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__PRACTICA_ESTUDIANTE_PRACTICA`
    FOREIGN KEY (`Practica`)
    REFERENCES `TTPT`.`PRACTICA` (`Clase`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`TEORIA_ESTUDIANTE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`TEORIA_ESTUDIANTE` (
  `Teoria` INT NOT NULL,
  `Estudiante` VARCHAR(6) NOT NULL,
  PRIMARY KEY (`Teoria`, `Estudiante`),
  INDEX `fk_TEORIA_ESTUDIANTE_ESTUDIANTE_idx` (`Estudiante` ASC),
  CONSTRAINT `fk_TEORIA_ESTUDIANTE-ESTUDIANTE`
    FOREIGN KEY (`Estudiante`)
    REFERENCES `TTPT`.`ESTUDIANTE` (`idESTUDIANTE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__TEORIA_ESTUDIANTE__TEORIA`
    FOREIGN KEY (`Teoria`)
    REFERENCES `TTPT`.`TEORIA` (`Clase`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`EXAMEN_PRACTICO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`EXAMEN_PRACTICO` (
  `Documento` INT NOT NULL,
  `Calificacion` DECIMAL(10,0) NOT NULL COMMENT 'el estado del examen se deduce de la calificación, de 75% hacia arriba es aprobado.',
  PRIMARY KEY (`Documento`),
  INDEX `fk_EXAMEN_PRACTICO-DOCUMENTO_idx` (`Documento` ASC),
  CONSTRAINT `fk_EXAMEN_PRACTICO-DOCUMENTO`
    FOREIGN KEY (`Documento`)
    REFERENCES `TTPT`.`DOCUMENTO` (`idDOCUMENTO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`EXAMEN_TEORICO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`EXAMEN_TEORICO` (
  `Documento` INT NOT NULL,
  `Calificacion` DECIMAL(10,0) NOT NULL,
  PRIMARY KEY (`Documento`),
  INDEX `fk_EXAMEN_TEORICO-DOCUMENTO_idx` (`Documento` ASC),
  CONSTRAINT `fk_EXAMEN_TEORICO-DOCUMENTO`
    FOREIGN KEY (`Documento`)
    REFERENCES `TTPT`.`DOCUMENTO` (`idDOCUMENTO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`ASISTENCIA_PRACTICA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`ASISTENCIA_PRACTICA` (
  `Asistencia` INT NOT NULL,
  `Estudiante` VARCHAR(6) NOT NULL,
  `Practica` INT NOT NULL,
  `Auto` VARCHAR(6) NOT NULL,
  `Instructor` INT NOT NULL,
  PRIMARY KEY (`Asistencia`, `Estudiante`, `Practica`),
  INDEX `fk_ASISTENCIA_PRACTICA-PRACTICA_ESTUDIANTE_idx` (`Estudiante` ASC, `Practica` ASC),
  INDEX `fk_ASISTENCIA_PRACTICA-AUTO-ESCUELA_idx` (`Auto` ASC),
  INDEX `fk__ASISTENCIA_PRACTICA__INSTRUCTOR_idx` (`Instructor` ASC),
  CONSTRAINT `fk_ASISTENCIA_PRACTICA-ASISTENCIA`
    FOREIGN KEY (`Asistencia`)
    REFERENCES `TTPT`.`ASISTENCIA` (`idASISTENCIA`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ASISTENCIA_PRACTICA-PRACTICA_ESTUDIANTE`
    FOREIGN KEY (`Estudiante` , `Practica`)
    REFERENCES `TTPT`.`PRACTICA_ESTUDIANTE` (`Estudiante` , `Practica`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ASISTENCIA_PRACTICA-AUTO-ESCUELA`
    FOREIGN KEY (`Auto`)
    REFERENCES `TTPT`.`AUTO-ESCUELA` (`Matricula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__ASISTENCIA_PRACTICA__INSTRUCTOR`
    FOREIGN KEY (`Instructor`)
    REFERENCES `TTPT`.`INSTRUCTOR` (`idINSTRUCTOR`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`ASISTENCIA_TEORIA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`ASISTENCIA_TEORIA` (
  `Asistencia` INT NOT NULL,
  `Estudiante` VARCHAR(6) NOT NULL,
  `Teoria` INT NOT NULL,
  PRIMARY KEY (`Asistencia`, `Estudiante`, `Teoria`),
  INDEX `fk_ASISTENCIA_TEORIA-TEORIA_ESTUDIANTE_idx` (`Estudiante` ASC, `Teoria` ASC),
  CONSTRAINT `fk_ASISTENCIA_TEORIA-ASISTENCIA`
    FOREIGN KEY (`Asistencia`)
    REFERENCES `TTPT`.`ASISTENCIA` (`idASISTENCIA`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ASISTENCIA_TEORIA-TEORIA_ESTUDIANTE`
    FOREIGN KEY (`Estudiante` , `Teoria`)
    REFERENCES `TTPT`.`TEORIA_ESTUDIANTE` (`Estudiante` , `Teoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`PRODUCTO_TIPO_DOCUMENTO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`PRODUCTO_TIPO_DOCUMENTO` (
  `Producto` VARCHAR(10) NOT NULL,
  `Documento` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Producto`, `Documento`),
  INDEX `fk_PRODUCTO_DOCUMENTO-TIPO_DOCUMENTO_idx` (`Documento` ASC),
  CONSTRAINT `fk_PRODUCTO_DOCUMENTO-PRODUCTO`
    FOREIGN KEY (`Producto`)
    REFERENCES `TTPT`.`PRODUCTO` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PRODUCTO_DOCUMENTO-TIPO_DOCUMENTO`
    FOREIGN KEY (`Documento`)
    REFERENCES `TTPT`.`TIPO_DOCUMENTO` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`PRECIO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`PRECIO` (
  `Producto` VARCHAR(45) NOT NULL,
  `Tipo_Cliente` VARCHAR(10) NOT NULL,
  `Monto` DECIMAL(10,0) NOT NULL DEFAULT 0 COMMENT 'Reprecenta el precio del producto \'Producto\' para el un cliente dado su \'Tipo_Cliente\'',
  PRIMARY KEY (`Producto`, `Tipo_Cliente`),
  INDEX `fk_PRECIO-TIPO_CLIENTE_idx` (`Tipo_Cliente` ASC),
  CONSTRAINT `fk_PRECIO-PRODUCTO`
    FOREIGN KEY (`Producto`)
    REFERENCES `TTPT`.`PRODUCTO` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PRECIO-TIPO_CLIENTE`
    FOREIGN KEY (`Tipo_Cliente`)
    REFERENCES `TTPT`.`TIPO_CLIENTE` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`BOLETA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`BOLETA` (
  `Codigo` VARCHAR(6) NOT NULL,
  PRIMARY KEY (`Codigo`),
  CONSTRAINT `fk_PAGO-BOLETA`
    FOREIGN KEY (`Codigo`)
    REFERENCES `TTPT`.`PAGO` (`Codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`FACTURA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`FACTURA` (
  `Codigo` VARCHAR(6) NOT NULL,
  PRIMARY KEY (`Codigo`),
  CONSTRAINT `fk_FACTURA-PAGO`
    FOREIGN KEY (`Codigo`)
    REFERENCES `TTPT`.`PAGO` (`Codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`ESTUDIANTE_DOCUMENTO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`ESTUDIANTE_DOCUMENTO` (
  `Estudiante` VARCHAR(6) NOT NULL,
  `Documento` INT NOT NULL,
  PRIMARY KEY (`Estudiante`, `Documento`),
  INDEX `fk_ESTUDIANTE_DOCUMENTO-DOCUMENTO_idx` (`Documento` ASC),
  CONSTRAINT `fk__ESTUDIANTE_DOCUMENTO__ESTUDIANTE`
    FOREIGN KEY (`Estudiante`)
    REFERENCES `TTPT`.`ESTUDIANTE` (`idESTUDIANTE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__ESTUDIANTE_DOCUMENTO__DOCUMENTO`
    FOREIGN KEY (`Documento`)
    REFERENCES `TTPT`.`DOCUMENTO` (`idDOCUMENTO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`EXAMEN_MUNICIPAL`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TTPT`.`EXAMEN_MUNICIPAL` (
  `Documento` INT NOT NULL,
  `Comentario` TEXT NULL COMMENT 'Motivo en caso de reprobar',
  PRIMARY KEY (`Documento`),
  INDEX `fk_EXAMEN_MUNICIPAL-DOCUMENTO_idx` (`Documento` ASC),
  CONSTRAINT `fk_EXAMEN_MUNICIPAL-DOCUMENTO`
    FOREIGN KEY (`Documento`)
    REFERENCES `TTPT`.`DOCUMENTO` (`idDOCUMENTO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
